using TMS.Application.features.User.Get;
using TMS.Application.features.User.Post;
using TMS.Application.features.User.Put;
using MediatR;
using Microsoft.AspNetCore.Mvc;

namespace WebApplication1.Controllers
{
    [Route("Dummy-project/api/[controller]")]
    [ApiController]
    public class UserController : Controller
    {
        private readonly IMediator _mediator;

        public UserController(IMediator mediator)
        {
            _mediator = mediator;
        }

        [HttpGet("", Name = "GetUsers")]
        public async Task<IActionResult> GetUser([FromQuery] ResourseParameter resource)
        {
            var response = await _mediator.Send(new GetUserQuery(resource));
            return Ok(response);
        }

        [HttpPost]
        public async Task<IActionResult> CreateUser([FromBody] CreateUserCommand command)
        {
            var response = await _mediator.Send(command);
            return CreatedAtRoute("GetUsers", new { }, response);
        }

        [HttpPut("{id}")]
        public async Task<IActionResult> UpdateUser(int id, [FromBody] UpdateUserCommand command)
        {
            if (id != command.Id)
                return BadRequest();
            var response = await _mediator.Send(command);
            if (response == null || !response.Success)
                return NotFound();
            return Ok(response);
        }
    }
}
