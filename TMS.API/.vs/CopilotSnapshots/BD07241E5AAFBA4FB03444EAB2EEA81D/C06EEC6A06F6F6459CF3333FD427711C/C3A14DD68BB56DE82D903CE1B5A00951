using MediatR;
using TMS.Application.Common.infra;
using TMS.Application.Entities;

namespace TMS.Application.features.Team.Get
{
    public class GetTeamHandler : IRequestHandler<GetTeamQuery, List<TeamResponse>>
    {
        private readonly IUnitOfWork _unitOfWork;
        public GetTeamHandler(IUnitOfWork unitOfWork)
        {
            _unitOfWork = unitOfWork;
        }
        public async Task<List<TeamResponse>> Handle(GetTeamQuery request, CancellationToken cancellationToken)
        {
            var repo = _unitOfWork.Repository<Team, int>();
            var teams = await repo.ListAllAsync();
            return teams.Select(t => new TeamResponse
            {
                Id = t.Id,
                Name = t.Name,
                Description = t.Description
            }).ToList();
        }
    }
}