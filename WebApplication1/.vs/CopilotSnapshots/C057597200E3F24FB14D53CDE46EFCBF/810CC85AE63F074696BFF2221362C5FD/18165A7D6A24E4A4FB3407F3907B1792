using MapsterMapper;
using MediatR;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Application.features.Customer.Get
{
    public class GetCustomerHandler : IRequestHandler<GetCustomerQuery, CustomerResponse>
    {
        private readonly IRepository _repository;

        public GetCustomerHandler(IRepository repository)
        {
            _repository = repository;
        }

        public async Task<List<CustomerResponse>> Handle(GetCustomerQuery request, CancellationToken cancellationToken)
        {
            var customers = _repository.GetCustomers(request.resource);

           //return  await context.RespondAsync(new GetAnnexResponse
           // {
           //     AnnexModels = _mapper.Map<IEnumerable<AnnexModel>>(pagedList),
           //     PaginationMetadata = _mapper.Map<PaginationMetadata>(pagedList)
           // });


        }
    }
}
