using Application.Common.infra;
using MediatR;

namespace Application.features.Customer.Post
{
    public class CreateCustomerHandler : IRequestHandler<CreateCustomerCommand, CreateCustomerResponse>
    {
        private readonly IUnitOfWork _unitOfWork;
        public CreateCustomerHandler(IUnitOfWork unitOfWork)
        {
            _unitOfWork = unitOfWork;
        }
        public async Task<CreateCustomerResponse?> Handle(CreateCustomerCommand request, CancellationToken cancellationToken)
        {
            var customer = new Entities.Customer(request.Name, request.Remarks);
            await _unitOfWork.Repository<Entities.Customer, int>().AddAsync(customer);

            if (await _unitOfWork.CommitAsync() > 0)
            {
                return new CreateCustomerResponse
                {
                    Id = customer.Id,
                    Name = customer.Name,
                    Remarks = customer.Remarks
                };
            }
            else
            {
                return null;
            }
        }
    }
}